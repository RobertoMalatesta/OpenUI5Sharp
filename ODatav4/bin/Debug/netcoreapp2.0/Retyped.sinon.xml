<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Retyped.sinon</name>
    </assembly>
    <members>
        <member name="M:Retyped.sinon.Sinon.SinonFakeTimers.setSystemTime(System.Double)">
            <summary>
            Simulate the user changing the system clock while your program is running. It changes the 'now' timestamp
            without affecting timers, intervals or immediates.
            </summary>
            <param name = "now">The new 'now' in unix milliseconds</param>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonFakeTimers.setSystemTime(Retyped.es5.Date)">
            <summary>
            Simulate the user changing the system clock while your program is running. It changes the 'now' timestamp
            without affecting timers, intervals or immediates.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonArrayMatcher.deepEquals(System.Object[])">
            <summary>
            Requires an Array to be deep equal another one.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonArrayMatcher.startsWith(System.Object[])">
            <summary>
            Requires an Array to start with the same values as another one.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonArrayMatcher.endsWith(System.Object[])">
            <summary>
            Requires an Array to end with the same values as another one.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonArrayMatcher.contains(System.Object[])">
            <summary>
            Requires an Array to contain each one of the values the given array has.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonMapMatcher.deepEquals(Retyped.es2015_collection.Map{System.Object,System.Object})">
            <summary>
            Requires a Map to be deep equal another one.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonMapMatcher.contains(Retyped.es2015_collection.Map{System.Object,System.Object})">
            <summary>
            Requires a Map to contain each one of the items the given map has.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonSetMatcher.deepEquals(Retyped.es2015_collection.Set{System.Object})">
            <summary>
            Requires a Set to be deep equal another one.
            </summary>
        </member>
        <member name="M:Retyped.sinon.Sinon.SinonSetMatcher.contains(Retyped.es2015_collection.Set{System.Object})">
            <summary>
            Requires a Set to contain each one of the items the given set has.
            </summary>
        </member>
        <member name="P:Retyped.sinon.Sinon.SinonMatch.map">
            <summary>
            Requires the value to be a Map.
            </summary>
        </member>
        <member name="P:Retyped.sinon.Sinon.SinonMatch.set">
            <summary>
            Requires the value to be a Set.
            </summary>
        </member>
        <member name="P:Retyped.sinon.Sinon.SinonMatch.array">
            <summary>
            Requires the value to be an Array.
            </summary>
        </member>
    </members>
</doc>
